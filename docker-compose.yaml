version: '3'

services:
  producer:
    tty: true
    build: ./python/producer/
    command: sh -c "./run_producer.sh"
    container_name: producer
    depends_on:
      - broker

  consumer:
    tty: true
    build: ./python/consumer/
    command: sh -c "./run_consumer.sh"
    container_name: consumer
    depends_on:
      - broker
      - cassandra

  app:
    tty: true
    build: ./app/
    command: sh -c "python service.py"
    container_name: app
    ports:
      - "8000:8000"
    depends_on:
      - broker
      - cassandra

  cassandra:
    tty: true
    build: ./cassandra/
    container_name: cassandra
    ports:
      - "9042:9042"
    volumes:
      - /var/lib/cassandra

  sample-data:
    tty: true
    build: ./Script/
    container_name: sample-data
    depends_on:
      - cassandra
    restart: "no"
    entrypoint: ["/script.sh"]
    volumes:
      - ./script.sh:/script.sh

  zookeeper:
            image: confluentinc/cp-zookeeper:7.0.1
            container_name: zookeeper
            environment:
                  ZOOKEEPER_CLIENT_PORT: 2181
                  ZOOKEEPER_TICK_TIME: 2000

  broker:
            image: confluentinc/cp-kafka:7.0.1
            container_name: broker
            ports:
                  # To learn about configuring Kafka for access across networks see
                  # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
                  - "9092:9092"
            depends_on:
                  - zookeeper
            environment:
                  KAFKA_BROKER_ID: 1
                  KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
                  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
                  KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
                  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
                  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
                  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

